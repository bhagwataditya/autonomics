% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/8_fit_limma.R
\name{contr.treat.first}
\alias{contr.treat.first}
\alias{contr.treat.grand}
\alias{contr.sdiff.first}
\alias{contr.sdiff.grand}
\alias{contr.sum.grand}
\alias{contr.helmert.grand}
\title{Contrast Code Factor}
\usage{
contr.treat.first(x)

contr.treat.grand(x)

contr.sdiff.first(x)

contr.sdiff.grand(x)

contr.sum.grand(x)

contr.helmert.grand(x)
}
\arguments{
\item{n}{factor    vector}
}
\value{
character vector
}
\description{
Contrast Code Factor for General Linear Model
}
\details{
Each factor in a General Linear Model is 'coded' using a 'contrast coding function'.
This leads to a linear model with an intercept and k-1 coefficients per k-leveled factor.
The interpretation of intercept and other coefficients depends on the coding function used.
Several contrast coding functions are provided in 'stats' and 'codingMatrices', but their namings are somewhat confusing.
The functions below have more intuitive namings and serve as an interface to underlying functions in stats and codingMatrices.
`contr.treat.first` : coef(k) = level(k) - level(1),    intercept = level(1)
`contr.treat.grand` : coef(k) = level(k) - level(1),    intercept = grandmean
`contr.sdiff.first`     : coef(k) = level(k) - level(k-1);  intercept = level(1)
`contr.sdiff.grand`     : coef(k) = level(k) - level(k-1);  intercept = grandmean
`contr.sum.grand`       : coef(k) = level(k) - grandmean;   intercept = grandmean
`contr.helmert.grand`   : coef(k) = level(k) - mean(1:k-1); intercept = grandmean
}
\examples{
(x <- factor(c('A', 'B', 'C')))
coefs(x)  # treatment contrasts
coefs(code(x, contr.treat.first))  # treatment contrasts, intercept = first level
coefs(code(x, contr.treat.grand))  # treatment contrasts, intercept = grand mean
coefs(code(x, contr.sdiff.first)   # successive diffs,    intercept = first level
coefs(code(x, contr.sdiff.grand)   # successive diffs,    intercept = grand mean
coefs(code(x, contr.sum.first)     # sum contrasts,       intercept = first level
coefs(code(x, contr.helmert)       # helmert contrasts,   intercept = grand mean
}
