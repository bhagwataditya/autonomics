% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/8_fit.R
\name{modelvar}
\alias{modelvar}
\alias{effectvar}
\alias{tvar}
\alias{pvar}
\alias{fdrvar}
\alias{abstractvar}
\alias{modelvec}
\alias{effectvec}
\alias{tvec}
\alias{pvec}
\alias{fdrvec}
\alias{modelmat}
\alias{effectmat}
\alias{effectsizemat}
\alias{tmat}
\alias{pmat}
\alias{fdrmat}
\alias{modelfeatures}
\alias{upfeatures}
\alias{downfeatures}
\title{Get model variable}
\usage{
modelvar(
  featuredt,
  quantity,
  sep = FITSEP,
  fit = fits(featuredt, sep = sep),
  coef = default_coefs(featuredt, sep = sep, fit = fit)
)

effectvar(
  featuredt,
  sep = FITSEP,
  fit = fits(featuredt, sep = sep),
  coef = default_coefs(featuredt, fit = fit, sep = sep)
)

tvar(
  featuredt,
  fit = fits(featuredt),
  sep = FITSEP,
  coef = default_coefs(featuredt, fit = fit)
)

pvar(
  featuredt,
  sep = FITSEP,
  fit = fits(featuredt, sep = sep),
  coef = default_coefs(featuredt, sep = sep, fit = fit)
)

fdrvar(
  featuredt,
  sep = FITSEP,
  fit = fits(featuredt, sep = sep),
  coef = default_coefs(featuredt, sep = sep, fit = fit)
)

abstractvar(
  featuredt,
  sep = FITSEP,
  fit = fits(featuredt, sep = sep),
  coef = default_coefs(featuredt, sep = sep, fit = fit)
)

modelvec(
  featuredt,
  quantity,
  sep = FITSEP,
  fit = fits(featuredt, sep = sep)[1],
  coef = default_coefs(featuredt, fit = fit, sep = sep)[1],
  fvar = "feature_id"
)

effectvec(
  featuredt,
  sep = FITSEP,
  fit = fits(featuredt, sep = sep)[1],
  coef = default_coefs(featuredt, sep = sep, fit = fit)[1],
  fvar = "feature_id"
)

tvec(
  object,
  sep = FITSEP,
  fit = fits(fdt(object), sep = sep)[1],
  coef = default_coefs(fdt(object), sep = sep, fit = fit)[1],
  fvar = "feature_id"
)

pvec(
  object,
  sep = FITSEP,
  fit = fits(fdt(object), sep = sep)[1],
  coef = default_coefs(fdt(object), fit = fit)[1],
  fvar = "feature_id"
)

fdrvec(
  object,
  sep = FITSEP,
  fit = fits(fdt(object), sep = sep)[1],
  coef = default_coefs(fdt(object), sep = sep, fit = fit)[1],
  fvar = "feature_id"
)

modelmat(
  object,
  quantity,
  sep = FITSEP,
  fit = fits(fdt(object), sep = sep),
  coef = default_coefs(fdt(object), sep = sep, fit = fit)
)

effectmat(
  object,
  sep = FITSEP,
  fit = fits(fdt(object), sep = sep),
  coef = default_coefs(fdt(object), sep = sep, fit = fit)
)

effectsizemat(
  object,
  sep = FITSEP,
  fit = fits(fdt(object), sep = sep),
  coef = default_coefs(fdt(object), sep = sep, fit = fit)
)

tmat(
  object,
  sep = FITSEP,
  fit = fits(fdt(object), sep = sep),
  coef = default_coefs(fdt(object), sep = sep, fit = fit)
)

pmat(
  object,
  sep = FITSEP,
  fit = fits(fdt(object), sep = sep),
  coef = default_coefs(fdt(object), sep = sep, fit = fit)
)

fdrmat(
  object,
  sep = FITSEP,
  fit = fits(fdt(object), sep = sep),
  coef = default_coefs(fdt(object), sep = sep, fit = fit)
)

modelfeatures(
  object,
  sep = FITSEP,
  fit = fits(fdt(object), sep = sep)[1],
  coef = default_coefs(fdt(object), sep = sep, fit = fit)[1],
  fvar = "feature_id",
  significancevar = "p",
  significance = 0.05,
  effectdirection = "<>",
  effectsize = 0
)

upfeatures(
  object,
  sep = FITSEP,
  fit = fits(fdt(object), sep = sep)[1],
  coef = default_coefs(fdt(object), sep = sep, fit = fit)[1],
  fvar = "feature_id",
  significancevar = "p",
  significance = 0.05,
  effectsize = 0
)

downfeatures(
  object,
  sep = FITSEP,
  fit = fits(fdt(object), sep = sep)[1],
  coef = default_coefs(fdt(object), fit = fit, sep = sep)[1],
  fvar = "feature_id",
  significancevar = "p",
  significance = 0.05,
  effectsize = 0
)
}
\arguments{
\item{quantity}{'p', 'effect', 'fdr', 't', or 'se'}

\item{fit}{string (vector)}

\item{coef}{string (vector)}

\item{fvar}{'feature_id' or other fvar for values (pvec) or names (upfeatures)}

\item{object}{SummarizedExperiment}

\item{significancevar}{'p' or 'fdr'}

\item{significance}{p or fdr cutoff (fractional number)}

\item{effectdirection}{'<>', '<' or '>'}

\item{effectsize}{effectsize cutoff (positive number)}
}
\value{
string (tvar), matrix (tmat), numeric vector (tvec), character vector (tfeatures)
}
\description{
Get model variable
}
\examples{
# Read
    file <- download_data('atkin.metabolon.xlsx')
    object <- read_metabolon(file)
    object \%<>\% fit_limma()
    object \%<>\% fit_lm()
# modelvar
    modelvar(fdt(object), 'p');                                          pvar(fdt(object))
    modelvar(fdt(object), 'effect');                                effectvar(fdt(object))
    modelvar(fdt(object), 'fdr');                                      fdrvar(fdt(object))
# modelvec
    modelvec(fdt(object), 'p'     )[1:3];                                 pvec(object)[1:3]
    modelvec(fdt(object), 'effect')[1:3];                            effectvec(object)[1:3]
    modelvec(fdt(object), 'fdr'   )[1:3];                               fdrvec(object)[1:3]
# modelmatrix
    modelmat(object, 'p'     )[1:3, 1:3];                            pmat(object)[1:3, 1:3]
    modelmat(object, 'effect')[1:3, 1:3];                       effectmat(object)[1:3, 1:3]
    modelmat(object, 'fdr'   )[1:3, 1:3];                          fdrmat(object)[1:3, 1:3]
# modelfeatures
    modelfeatures(object      )[1:3]
    modelfeatures(object, effectdirection = '<' )[1:3];      downfeatures(object)[1:3]
    modelfeatures(object, effectdirection = '>' )[1:3];        upfeatures(object)[1:3]
}
