% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/8_fit_limma.R, R/8_fit_lmx.R,
%   R/8_fit_wilcoxon.R
\name{fit_limma}
\alias{fit_limma}
\alias{.fit_limma}
\alias{fit_lm}
\alias{fit_lme}
\alias{fit_lmer}
\alias{fit_wilcoxon}
\title{Fit model and test for differential expression}
\usage{
fit_limma(
  object,
  subgroupvar = if ("subgroup" \%in\% svars(object)) "subgroup" else NULL,
  formula = default_formula(object, subgroupvar, "limma"),
  design = create_design(object, formula = formula),
  coefs = colnames(design),
  contrastdefs = NULL,
  block = NULL,
  weightvar = if ("weights" \%in\% assayNames(object)) "weights" else NULL,
  statvars = c("effect", "p", "fdr"),
  verbose = TRUE,
  plot = FALSE
)

.fit_limma(
  object,
  subgroupvar = if ("subgroup" \%in\% svars(object)) "subgroup" else NULL,
  formula = default_formula(object, subgroupvar, "limma"),
  design = create_design(object, formula = formula),
  coefs = colnames(design),
  contrastdefs = NULL,
  block = NULL,
  weightvar = if ("weights" \%in\% assayNames(object)) "weights" else NULL,
  statvars = c("effect", "p", "fdr"),
  sep = FITSEP,
  suffix = paste0(sep, "limma"),
  verbose = TRUE,
  plot = FALSE
)

fit_lm(
  object,
  subgroupvar = if ("subgroup" \%in\% svars(object)) "subgroup" else NULL,
  formula = default_formula(object, subgroupvar, fit = "lm"),
  block = NULL,
  weightvar = if ("weights" \%in\% assayNames(object)) "weights" else NULL,
  coefs = NULL,
  contrastdefs = NULL,
  verbose = TRUE,
  plot = FALSE
)

fit_lme(
  object,
  subgroupvar = if ("subgroup" \%in\% svars(object)) "subgroup" else NULL,
  formula = default_formula(object, subgroupvar, fit = "lme"),
  block = NULL,
  weightvar = if ("weights" \%in\% assayNames(object)) "weights" else NULL,
  coefs = NULL,
  contrastdefs = NULL,
  verbose = TRUE,
  plot = FALSE
)

fit_lmer(
  object,
  subgroupvar = if ("subgroup" \%in\% svars(object)) "subgroup" else NULL,
  formula = default_formula(object, subgroupvar, fit = "lmer"),
  block = NULL,
  weightvar = if ("weights" \%in\% assayNames(object)) "weights" else NULL,
  coefs = NULL,
  contrastdefs = NULL,
  verbose = TRUE,
  plot = FALSE
)

fit_wilcoxon(
  object,
  subgroupvar = if ("subgroup" \%in\% svars(object)) "subgroup" else NULL,
  formula = default_formula(object, subgroupvar, fit = "wilcoxon"),
  coefs = NULL,
  contrastdefs = contrast_coefs(object, formula = formula),
  block = NULL,
  weightvar = NULL,
  verbose = TRUE,
  plot = FALSE
)
}
\arguments{
\item{object}{SummarizedExperiment}

\item{subgroupvar}{subgroup variable}

\item{formula}{modeling formula}

\item{design}{design matrix}

\item{coefs}{NULL or character vector: model coefficients to test}

\item{contrastdefs}{NULL or character vector: coefficient contrasts to test
\itemize{
\item{c("t1-t0", "t2-t1", "t3-t2")}
\item{matrix(c("WT.t1-WT.t0", "WT.t2-WT.t1", "WT.t3-WT.t2"), \cr
     c("KD.t1-KD.t0", "KD.t2-KD.t1", "KD.t3-KD.t2"), nrow=2, byrow=TRUE)}
\item{list(matrix(c("WT.t1-WT.t0", "WT.t2-WT.t1", "WT.t3-WT.t2"), \cr
     c("KD.t1-KD.t0", "KD.t2-KD.t1", "KD.t3-KD.t2"), nrow=2, byrow=TRUE), \cr
     matrix(c("KD.t0-WT.t0", "KD.t1-WT.t1", "KD.t2-WT.t2", "KD.t3-WT.t3"),\cr
     nrow=1, byrow=TRUE))}}}

\item{block}{block svar (or NULL)}

\item{weightvar}{NULL or name of weight matrix in assays(object)}

\item{statvars}{character vector: subset of c('effect', 'p', 'fdr', 't')}

\item{verbose}{whether to msg}

\item{plot}{whether to plot}

\item{...}{s3 dispatch}
}
\value{
Updated SummarizedExperiment
}
\description{
Fit model and test for differential expression
}
\examples{
# classical: lm & limma
    require(magrittr)
    file <- download_data('atkin18.metabolon.xlsx')
    object <- read_metabolon(file, plot=FALSE, impute=TRUE)
    object$SET \%<>\% factor(); object$SUB \%<>\% factor()
    object \%<>\% fit_limma(subgroupvar = 'SET')
    object \%<>\% fit_lm(subgroupvar = 'SET')
    plot_contrast_venn(testmat(object, coef = 't3'))
    
# blocked: limma, lme, lmer
    object \%<>\% fit_limma(subgroupvar = 'SET', block = 'SUB')
    object \%<>\% fit_lme(subgroupvar = 'SET', block = 'SUB')
    # object \%<>\% fit_lme(subgroupvar = 'SET', block = 'SUB') # slow
    plot_contrast_venn(testmat(object, coef = 't3', fit = c('limma', 'lme')))
    
# flexible: limma contrastdefs
    object \%<>\% fit_limma(formula=~SET,   coef='t3',            block='SUB')
    object \%<>\% fit_limma(formula=~0+SET, contrastdefs='t3-t0', block='SUB')
        # flexible, but only approximate
        # stat.ethz.ch/pipermail/bioconductor/2014-February/057682.html

# alternative coding: 
    stats::contrasts(object$SET) <- MASS::contr.sdif(levels(object$SET))
    object \%<>\% fit_limma(subgroupvar = 'SET', block = 'SUB') # backward difs
    stats::contrasts(object$SET) <-stats::contr.treatment(levels(object$SET))
    object \%<>\% fit_limma(subgroupvar = 'SET', block = 'SUB') # baseline difs
    
# non-parametric: wilcoxon
    object \%<>\% fit_limma(subgroupvar = 'SET', block = 'SUB')
    object \%<>\% fit_wilcoxon(subgroupvar='SET', block='SUB', 
                   contrastdefs=c('t1-t0', 't2-t0', 't3-t0'))
}
