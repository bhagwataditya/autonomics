% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/7_fit_limma.R, R/7_fit_lmx.R,
%   R/7_fit_wilcoxon.R
\name{fit_limma}
\alias{fit_limma}
\alias{fit_lm}
\alias{fit_lme}
\alias{fit_lmer}
\alias{fit_wilcoxon}
\title{Fit model and test for differential expression}
\usage{
fit_limma(
  object,
  subgroupvar = if ("subgroup" \%in\% svars(object)) "subgroup" else NULL,
  formula = as.formula(sprintf("~ 0 + \%s", if (is.null(subgroupvar)) 1 else
    subgroupvar)),
  contrastdefs = NULL,
  block = NULL,
  verbose = TRUE,
  plot = TRUE
)

fit_lm(
  object,
  subgroupvar = if ("subgroup" \%in\% svars(object)) "subgroup" else NULL,
  formula = as.formula(sprintf("value ~ \%s", if (is.null(subgroupvar)) 1 else
    subgroupvar)),
  block = NULL,
  contrastdefs = NULL,
  verbose = TRUE,
  plot = TRUE
)

fit_lme(
  object,
  subgroupvar = if ("subgroup" \%in\% svars(object)) "subgroup" else NULL,
  formula = as.formula(sprintf("value ~ \%s", if (is.null(subgroupvar)) 1 else
    subgroupvar)),
  block = NULL,
  contrastdefs = NULL,
  verbose = TRUE,
  plot = TRUE
)

fit_lmer(
  object,
  fit,
  subgroupvar = if ("subgroup" \%in\% svars(object)) "subgroup" else NULL,
  formula = as.formula(sprintf("value ~ \%s", if (is.null(subgroupvar)) 1 else
    subgroupvar)),
  block = NULL,
  contrastdefs = NULL,
  verbose = TRUE,
  plot = TRUE
)

fit_wilcoxon(
  object,
  formula = if ("subgroup" \%in\% svars(object)) ~subgroup else ~1,
  subgroupvar = all.vars(formula),
  contrastdefs = contrast_subgroups(object, create_design(object, formula)),
  block = NULL,
  verbose = TRUE,
  plot = TRUE
)
}
\arguments{
\item{object}{SummarizedExperiment}

\item{formula}{designmat formula}

\item{contrastdefs}{contrastdef vector / matrix / list
\itemize{
\item{c("t1-t0", "t2-t1", "t3-t2")}
\item{matrix(c("WT.t1-WT.t0", "WT.t2-WT.t1", "WT.t3-WT.t2"), \cr
     c("KD.t1-KD.t0", "KD.t2-KD.t1", "KD.t3-KD.t2"), nrow=2, byrow=TRUE)}
\item{list(matrix(c("WT.t1-WT.t0", "WT.t2-WT.t1", "WT.t3-WT.t2"), \cr
     c("KD.t1-KD.t0", "KD.t2-KD.t1", "KD.t3-KD.t2"), nrow=2, byrow=TRUE), \cr
     matrix(c("KD.t0-WT.t0", "KD.t1-WT.t1", "KD.t2-WT.t2", "KD.t3-WT.t3"),\cr
     nrow=1, byrow=TRUE))}}}

\item{block}{block svar (or NULL)}

\item{verbose}{whether to msg}

\item{plot}{whether to plot}
}
\value{
Updated SummarizedExperiment
}
\description{
Limma results can be easily accessed with limma(object).
}
\examples{
require(magrittr)
file <- download_data('atkin18.somascan.adat')
object <- read_somascan(file, plot=FALSE)
fit_wilcoxon(object)
fit_lm(object)
fit_limma(object)
fit_limma(object, block = 'Subject_ID')
fit_lme(  object, block = 'Subject_ID')
fit_lmer( object, block = 'Subject_ID')

file <- download_data('billing19.proteingroups.txt')
select <-  c('E00','E01', 'E02','E05','E15','E30', 'M00')
select \%<>\% paste0('_STD')
object <- read_proteingroups(file, select_subgroups = select, plot = FALSE)
object \%<>\% impute_systematic_nondetects(plot=FALSE)
object \%<>\% fit_limma()
object \%<>\% fit_lm()

file <- download_data('billing19.rnacounts.txt')
object <- read_rnaseq_counts(file, plot=FALSE, voom=TRUE)
object \%<>\% fit_limma(plot=FALSE)
weights(object) <- NULL; object \%<>\% fit_limma(plot=FALSE)
object \%<>\% fit_lm(plot=FALSE)

file <- download_data('halama18.metabolon.xlsx')
object <- read_metabolon(file, plot = FALSE)
object \%<>\% impute_systematic_nondetects(plot=FALSE)
object \%<>\% fit_limma(plot=FALSE)
object \%<>\% fit_lm(plot=FALSE)
}
