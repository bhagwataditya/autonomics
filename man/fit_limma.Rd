% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/8_fit_limma.R, R/8_fit_wilcoxon.R
\name{fit_limma}
\alias{fit_limma}
\alias{.fit_limma}
\alias{fit_wilcoxon}
\title{Fit model and test for differential expression}
\usage{
fit_limma(
  object,
  subgroupvar = if ("subgroup" \%in\% svars(object)) "subgroup" else NULL,
  contrasts = NULL,
  formula = default_formula(object, subgroupvar, contrasts),
  drop = varlevels_dont_clash(object, all.vars(formula)),
  contr.fun = NULL,
  design = create_design(object, formula = formula, drop = drop, contr.fun = contr.fun),
  coefs = if (is.null(contrasts)) colnames(design) else NULL,
  block = NULL,
  weightvar = if ("weights" \%in\% assayNames(object)) "weights" else NULL,
  statvars = c("effect", "p", "fdr"),
  sep = FITSEP,
  suffix = paste0(sep, "limma"),
  verbose = TRUE,
  plot = FALSE
)

.fit_limma(
  object,
  subgroupvar = if ("subgroup" \%in\% svars(object)) "subgroup" else NULL,
  contrasts = NULL,
  formula = default_formula(object, subgroupvar, contrasts),
  drop = varlevels_dont_clash(object, all.vars(formula)),
  contr.fun = NULL,
  design = create_design(object, formula = formula, drop = drop, contr.fun = contr.fun),
  coefs = if (is.null(contrasts)) colnames(design) else NULL,
  block = NULL,
  weightvar = if ("weights" \%in\% assayNames(object)) "weights" else NULL,
  statvars = c("effect", "p", "fdr"),
  sep = FITSEP,
  suffix = paste0(sep, "limma"),
  verbose = TRUE,
  plot = FALSE
)

fit_wilcoxon(
  object,
  subgroupvar = if ("subgroup" \%in\% svars(object)) "subgroup" else NULL,
  contrasts = sprintf("\%s-\%s", slevels(object, subgroupvar)[-1], slevels(object,
    subgroupvar)[1]),
  formula = NULL,
  coefs = NULL,
  block = NULL,
  weightvar = NULL,
  verbose = TRUE,
  plot = FALSE
)
}
\arguments{
\item{object}{SummarizedExperiment}

\item{subgroupvar}{subgroup variable}

\item{contrasts}{NULL or character vector: coefficient contrasts to test}

\item{formula}{modeling formula}

\item{drop}{TRUE or FALSE}

\item{contr.fun}{contrast coding function}

\item{design}{design matrix}

\item{coefs}{NULL or character vector: model coefs to test}

\item{block}{block svar (or NULL)}

\item{weightvar}{NULL or name of weight matrix in assays(object)}

\item{statvars}{character vector: subset of c('effect', 'p', 'fdr', 't')}

\item{sep}{string: pvar separator  ("~" in "p~t2~limma")}

\item{suffix}{string: pvar suffix ("limma" in "p~t2~limma")}

\item{verbose}{whether to msg}

\item{plot}{whether to plot}
}
\value{
Updated SummarizedExperiment
}
\description{
Fit model and test for differential expression
}
\examples{
# classical: lm & limma
    require(magrittr)
    file <- download_data('atkin18.metabolon.xlsx')
    object <- read_metabolon(file)
    object \%<>\% fit_limma()
    object \%<>\% fit_limma(contr.fun = contr.ref)
    object \%<>\% fit_lm()
    plot_contrast_venn(is_sig(object, contrast = 't2', fit = c('lm', 'limma')))
    
# blocked: limma, lme, lmer
    object \%<>\% fit_limma(subgroupvar = 'subgroup', block = 'SUB')
    object \%<>\% fit_lme(  subgroupvar = 'subgroup', block = 'SUB')
   #object \%<>\% fit_lmer( subgroupvar = 'subgroup', block = 'SUB') # slow
   #plot_contrast_venn(is_sig(object, contrast = 't3', fit = c('limma', 'lme')))
    
# flexible: limma contrasts
    object \%<>\% fit_limma(formula = ~subgroup,   block = 'SUB', coefs = 't1') 
    object \%<>\% fit_limma(formula = ~0+subgroup, block = 'SUB', contrasts = 't1-t0')
        # flexible, but only approximate
        # stat.ethz.ch/pipermail/bioconductor/2014-February/057682.html

# alternative contrast coding functions:
    object \%<>\% fit_limma(subgroupvar = 'subgroup', block = 'SUB')
    object \%<>\% fit_limma(subgroupvar = 'subgroup', block = 'SUB', contr.fun = contr.ref)
    object \%<>\% fit_limma(subgroupvar = 'subgroup', block = 'SUB', contr.fun = contr.dif)
    
# non-parametric: wilcoxon
    object \%<>\% fit_limma(   subgroupvar = 'subgroup', block = 'SUB')
    object \%<>\% fit_wilcoxon(subgroupvar = 'subgroup', block = 'SUB')
}
