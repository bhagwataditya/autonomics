% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/2_read_omics.R
\name{.read_omics}
\alias{.read_omics}
\alias{read_omics}
\title{Read omics data from rectangular file}
\usage{
.read_omics(
  file,
  sheet = 1,
  fid_rows,
  fid_cols,
  sid_rows,
  sid_cols,
  expr_rows,
  expr_cols,
  fvar_rows = NULL,
  fvar_cols = NULL,
  svar_rows = NULL,
  svar_cols = NULL,
  fdata_rows = NULL,
  fdata_cols = NULL,
  sdata_rows = NULL,
  sdata_cols = NULL,
  transpose = FALSE,
  verbose = TRUE
)

read_omics(
  file,
  sheet = 1,
  fid_rows,
  fid_cols,
  sid_rows,
  sid_cols,
  expr_rows,
  expr_cols,
  fvar_rows = NULL,
  fvar_cols = NULL,
  svar_rows = NULL,
  svar_cols = NULL,
  fdata_rows = NULL,
  fdata_cols = NULL,
  sdata_rows = NULL,
  sdata_cols = NULL,
  transpose = FALSE,
  sfile = NULL,
  sfileby = NULL,
  subgroupvar = character(0),
  verbose = TRUE
)
}
\arguments{
\item{file}{string: name of text (txt, csv, tsv, adat) or
excel (xls, xlsx) file}

\item{sheet}{integer/string: only relevant for excel files}

\item{fid_rows}{numeric vector: featureid rows}

\item{fid_cols}{numeric vector: featureid cols}

\item{sid_rows}{numeric vector: sampleid rows}

\item{sid_cols}{numeric vector: sampleid cols}

\item{expr_rows}{numeric vector: expr rows}

\item{expr_cols}{numeric vector: expr cols}

\item{fvar_rows}{numeric vector: fvar rows}

\item{fvar_cols}{numeric vector: fvar cols}

\item{svar_rows}{numeric vector: svar rows}

\item{svar_cols}{numeric vector: svar cols}

\item{fdata_rows}{numeric vector: fdata rows}

\item{fdata_cols}{numeric vector: fdata cols}

\item{sdata_rows}{numeric vector: sdata rows}

\item{sdata_cols}{numeric vector: sdata cols}

\item{transpose}{TRUE or FALSE (default)}

\item{verbose}{TRUE (default) or FALSE}

\item{sfile}{sample file}

\item{sfileby}{sample file mergeby column}

\item{subgroupvar}{subgroupvar in sfile}
}
\value{
SummarizedExperiment
}
\description{
Read omics data from rectangular file
}
\examples{
# RNASEQ
   file <- download_data('billing16.rnacounts.txt')
   read_omics(file,fid_rows   = 2:58736,   fid_cols   = 1,
                   sid_rows   = 1,         sid_cols   = 4:14,
                   expr_rows  = 2:58736,   expr_cols  = 4:14,
                   fvar_rows  = 1,         fvar_cols  = 1:3,
                   fdata_rows = 2:58736,   fdata_cols = 1:3,
                   transpose  = FALSE)
# LCMSMS PROTEINGROUPS
   file <- download_data('billing19.proteingroups.txt')
   read_omics(file,fid_rows   = 2:9044,  fid_cols   = 383,
                   sid_rows   = 1,       sid_cols   = seq(124, 316, by = 6),
                   expr_rows  = 2:9044,  expr_cols  = seq(124, 316, by = 6),
                   fvar_rows  = 1,       fvar_cols  = c(2, 6, 7, 383),
                   fdata_rows = 2:9044,  fdata_cols = c(2, 6, 7, 383),
                   transpose  = FALSE)
# SOMASCAN
   file <- download_data('billing16.somascan.adat')
   read_omics(file,fid_rows   = 21,       fid_cols   = 19:1146,
                   sid_rows   = 30:40,    sid_cols   = 4,
                   expr_rows  = 30:40,    expr_cols  = 19:1146,
                   fvar_rows  = 21:28,    fvar_cols  = 18,
                   svar_rows  = 29,       svar_cols  = 1:17,
                   fdata_rows = 21:28,    fdata_cols = 19:1146,
                   sdata_rows = 30:40,    sdata_cols = 1:17,
                   transpose  = TRUE)
# METABOLON
   file <- download_data('halama18.metabolon.xlsx')
   read_omics(file, sheet = 2,
                   fid_rows   = 11:401,    fid_cols   = 5,
                   sid_rows   = 3,         sid_cols   = 15:86,
                   expr_rows  = 11:401,    expr_cols  = 15:86,
                   fvar_rows  = 10,        fvar_cols  = 1:14,
                   svar_rows  = 1:10,      svar_cols  = 14,
                   fdata_rows = 11:401,    fdata_cols = 1:14,
                   sdata_rows = 1:10,      sdata_cols = 15:86,
                   transpose  = FALSE)
}
