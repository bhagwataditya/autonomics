% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/8_fit_limma.R
\name{code}
\alias{code}
\title{Code factor}
\usage{
code(x, contr.fun = contr.treatment, verbose = TRUE)
}
\arguments{
\item{x}{factor/character vector}

\item{contr.fun}{contrast coding function: contr.treatment, contr.sum, contr.helmert}

\item{verbose}{TRUE or FALSE}
}
\value{
(explicitly coded) factor vector
}
\description{
Code factor for General Linear Model
}
\details{
A General Linear Model contains:                                                                   \cr
  * An Intercept Coefficient: expressing some form of sample average                               \cr
  * For each numeric variable: a slope coefficient                                                 \cr
  * For each k-leveled factor: (k-1) Contrast Coefficients.                                        \cr
       Each contrast coefficient represents some difference (between factor levels)                \cr
       By default coefficient k represents the difference of level k to the first level            \cr
       This contrast coding is known as 'dummy', 'indicator', or 'treatment' coding.               \cr
       It is implemented in the function contr.treatment (and used by default).                    \cr
       Alternative contrast coding functions are offered in packages `stats` and `codingMatrices`. \cr
       They allow to customize interceptcoef (some average) and contrastcoefs (some difference):   \cr
       All of these functions except contr.helmert are unit-scaled (coefvalue = 1 means difference = 1)  \cr
                                                                                                   \cr
           ContrastCoef             InterceptCoef     ContrastCodingFunction  Scaling              \cr
           ------------             -------------     --------------          -------              \cr
           level_k - level_1        level_1           contr.treatment           1                  \cr
                                    globalmean        code_control              1                  \cr
           level_k - level_(k-1)    level_1           contr.diff                1                  \cr
                                    globalmean        code_diff                 1                  \cr
           level_k - globalmean     globalmean        contr.sum                 1                  \cr
                                    globalmean        code_deviation            1                  \cr
           level_k - prevmean       prevmean          contr.helmert             a                  \cr
                                    prevmean          code_helmert              1                  \cr
}
\examples{
# Altenative Codings
    require(codingMatrices)                           #  ContrastCoef         InterceptCoef     Scaling      CodingFunction
    x <- paste0('time', 0:3)                          #  --------------       -------------     -------      --------------
    x \%<>\% code(contr.treatment)                      #  t(k) - t(0)          t0                  1          contr.treatment
    x \%<>\% code(code_control)                         #                       globalmean          1          code_control
    x \%<>\% code(contr.diff)                           #  t(k) - t(k-1)        t0                  1          contr.diff
    x \%<>\% code(code_diff)                            #                       globalmean          1          code_diff
    x \%<>\% code(contr.sum)                            #  t(k) - globalmean    globalmean          1          contr.sum
    x \%<>\% code(code_deviation)                       #                                           1          code_deviation
    x \%<>\% code(contr.helmert)                        #  t(k) - prevmean      globalmean          1          contr.helmert
    x \%<>\% code(code_helmert)                         #                                           a          code_helmert

# Effects on Statistics                               #  ContrastCoef         InterceptCoef     Scaling      CodingFunction
    file <- download_data('atkin18.metabolon.xlsx')   #  ------------         -------------     -------      --------------
    object <- read_metabolon(file)                    #  t(k) - t(0)          t0                  1          contr.treatment
    object \%<>\% fit_limma()                           #          
    object$subgroup \%<>\% code(code_control)           #                       globalmean          1          code_control
    object \%<>\% fit_limma()                           #                  
    object$subgroup \%<>\% code(contr.diff)             #  t(k) - t(k-1)        t0                  1          contr.diff
    object \%<>\% fit_limma()                           #
    object$subgroup \%<>\% code(code_diff)              #                       globalmean          1          code_diff
    object \%<>\% fit_limma()                           #
    object$subgroup \%<>\% code(contr.sum)              #  t(k) - globalmean    globalmean          1          contr.sum
    object \%<>\% fit_limma()                           #
    object$subgroup \%<>\% code(code_deviation)         #                                           1          code_deviation
    object \%<>\% fit_limma()                           #
    object$subgroup \%<>\% code(contr.helmert)          #  t(k) - prevmean      globalmean          1          contr.helmert
    object \%<>\% fit_limma()                           #
    object$subgroup \%<>\% code(code_helmert)           #                                           a          code_helmert
    object \%<>\% fit_limma()
}
