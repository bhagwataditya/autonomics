% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/8_fit_limma.R
\name{code}
\alias{code}
\alias{contr.treat.first}
\alias{contr.treat.grand}
\alias{contr.diff.first}
\alias{contr.diff.grand}
\alias{contr.sum.grand}
\alias{contr.helmert.grand}
\title{Contrast Code Factor}
\usage{
code(x, contr.fun = contr.treat.first, verbose = TRUE)

contr.treat.first(n)

contr.treat.grand(n)

contr.diff.first(n)

contr.diff.grand(n)

contr.sum.grand(n)

contr.helmert.grand(n)
}
\arguments{
\item{x}{factor vector}

\item{contr.fun}{contrast coding function: contr.treatment, contr.sum, contr.helmert}

\item{verbose}{TRUE or FALSE}

\item{n}{factor levels (character) vector}
}
\value{
(explicitly coded) factor vector
}
\description{
Contrast Code Factor for General Linear Model
}
\details{
A General Linear Model contains:                                                                   \cr
  * An Intercept Coefficient: expressing some form of sample average                               \cr
  * For each numeric variable: a slope coefficient                                                 \cr
  * For each k-leveled factor: (k-1) Contrast Coefficients.                                        \cr
       The interpretation of (intercept and contrast) coefficients depends on the contrast coding function used.
       Several contrast coding functions are available in 'stats' and 'codingMatrices'
       But their (function and coefficient) namings are a bit confusing and unsystematic.
       Instead, the functions below offer an intuitive interface (to the otherwise powerful stats/codingMatrices packages).
       The names of these functions reflect the contrast coding used (treatment, difference, sum, or helmert contrasts).
       They also reflect the intercept interpretation (either first factor's first level or grand mean).
       They all produce intuitive coefficient names (e.g. 't1-t0' rather than just 't1').
       They all have unit scaling (a coefficient of 1 means a difference of 1).
       
The following contrast coding functions are available:
    1) Treatment contrasts:      contrast  coefficient = difference to first level
           `contr.treat.first`   intercept coefficient = first level of first factor
           `contr.treat.grand`   intercept coefficient = grand mean
            
    2) Difference contrasts:     contrast  coefficient = difference to previous level
           `contr.diff.first`    intercept coefficient = first level of first factor
           `contr.diff.grand`    intercept coefficient = grand mean
           
    3) Sum contrasts :           contrast  coefficient = difference to grand mean
           `contr.sum.grand`     intercept coefficient = grand mean
           
    4) Helmert contrasts:        contrast  coefficient = difference to helmert mean (i.e. the mean of the previous levels)
           `contr.helmert.grand` intercept coefficient = grand mean
}
\examples{
# Contrast codings
    x <- factor(paste0('t', 0:3))
    contr.treat.first(  levels(x))
    contr.treat.grand(  levels(x))
    contr.diff.first(   levels(x))
    contr.diff.grand(   levels(x))
    contr.sum.grand(    levels(x))
    contr.helmert.grand(levels(x))

# Contrast code
    x \%<>\% code(contr.treat.first)
    x \%<>\% code(contr.treat.grand)
    x \%<>\% code(contr.diff.first)
    x \%<>\% code(contr.diff.grand)
    x \%<>\% code(contr.sum.grand)
    x \%<>\% code(contr.helmert.grand)

# Code and model
    file <- download_data('atkin18.metabolon.xlsx')
    object <- read_metabolon(file)
    object \%<>\% fit_limma()                                         #  default: treatment contrasts, firstlevel intercept, implicit coefnames
    object$subgroup \%<>\% code(contr.treat.first);   object \%<>\% fit_limma()  #  treatment contrasts, firstlevel intercept, explicit coefnames
    object$subgroup \%<>\% code(contr.treat.grand);   object \%<>\% fit_limma()  #  treatment contrasts,  grandmean intercept, explicit coefnames
    object$subgroup \%<>\% code(contr.diff.first);    object \%<>\% fit_limma()  # difference contrasts, firstlevel intercept, explicit coefnames
    object$subgroup \%<>\% code(contr.diff.grand);    object \%<>\% fit_limma()  # difference contrasts,  grandmean intercept, explicit coefnames
    object$subgroup \%<>\% code(contr.sum.grand);     object \%<>\% fit_limma()  #        sum contrasts,  grandmean intercept, explicit coefnames
    object$subgroup \%<>\% code(contr.helmert.grand); object \%<>\% fit_limma()  #    helmert contrasts,  grandmean intercept, explicit coefnames
}
